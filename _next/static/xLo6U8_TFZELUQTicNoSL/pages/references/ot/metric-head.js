(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"2zsx":function(e,t,a){"use strict";a.d(t,"g",(function(){return r})),a.d(t,"i",(function(){return n})),a.d(t,"d",(function(){return c})),a.d(t,"k",(function(){return l})),a.d(t,"b",(function(){return i})),a.d(t,"h",(function(){return b})),a.d(t,"j",(function(){return d})),a.d(t,"a",(function(){return o})),a.d(t,"e",(function(){return u})),a.d(t,"c",(function(){return p})),a.d(t,"f",(function(){return m}));var r=function(e){return{optional:e}},n=function(e){return{readonly:e}},c=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return{either:t}},l=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return{tuple:t}},i=function(e){for(var t=arguments.length,a=new Array(t>1?t-1:0),r=1;r<t;r++)a[r-1]=arguments[r];return{generic:e,args:a}},b=function(e,t){return{takes:e,returns:t}},d=function(e){return{object:e}},o=function(e,t){return{rawType:e,annotation:t}},u=function(e,t){return{operator:"extends",left:e,right:t}},p=function(e,t){return{operator:"=",left:e,right:t}},m=function(e,t){return{operator:"is",left:e,right:t}}},smnV:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return s}));var r=a("z3IF"),n=a("2Fjn"),c=a("mXGw"),l=a.n(c),i=a("/FXl"),b=a("I+gl"),d=a("Vp4n"),o=a("+3er"),u=a("2zsx"),p=(l.a.createElement,{}),m=b.a;function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.a)(m,Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(i.a)("h1",null,"Namespace ",Object(i.a)(d.a,{s:o.c.MetricHead,mdxType:"Decl"})),Object(i.a)("h3",null,"Constant ",Object(i.a)(d.a,{s:o.c.MetricHead.TagHhea,mdxType:"Decl"}),' = "hhea"'),Object(i.a)("h3",null,"Constant ",Object(i.a)(d.a,{s:o.c.MetricHead.TagVhea,mdxType:"Decl"}),' = "vhea"'),Object(i.a)("h3",null,"Abstract Class ",Object(i.a)(d.a,{s:o.c.MetricHead.Table,mdxType:"Decl"})),Object(i.a)("h4",null,"Properties"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{readonly:!0,s:o.c.MetricHead.Table.isVertical,type:o.i,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{readonly:!0,s:o.c.MetricHead.Table.majorVersion,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{readonly:!0,s:o.c.MetricHead.Table.minorVersion,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table.ascender,type:o.c.Var.Value,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table.descender,type:o.c.Var.Value,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table.lineGap,type:o.c.Var.Value,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table.advanceMax,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{volatile:!0,s:o.c.MetricHead.Table.minStartSideBearing,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{volatile:!0,s:o.c.MetricHead.Table.minEndSideBearing,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{volatile:!0,s:o.c.MetricHead.Table.maxExtent,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table.caretSlopeRise,type:o.c.Var.Value,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table.caretSlopeRun,type:o.c.Var.Value,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table.caretOffset,type:o.c.Var.Value,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table._reserved0,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table._reserved1,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table._reserved2,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{s:o.c.MetricHead.Table._reserved3,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{readonly:!0,s:o.c.MetricHead.Table.metricDataFormat,type:o.l,mdxType:"Member"})),Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.d,{volatile:!0,s:o.c.MetricHead.Table.numberOfLongMetrics,type:o.l,mdxType:"Member"}))),Object(i.a)("h3",null,"Class ",Object(i.a)(d.a,{s:o.c.MetricHead.Hhea,mdxType:"Decl"})),Object(i.a)("h4",null,"Inherits"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.g,{s:o.c.MetricHead.Table,mdxType:"R"}))),Object(i.a)("h4",null,"Cosntructor"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.e,{ctor:!0,s:o.c.MetricHead.Hhea.constructor,args:{majorVersion:Object(u.g)(o.l),minorVersion:Object(u.g)(o.l)},mdxType:"Method"}),Object(i.a)("p",{parentName:"li"},"  In current OpenType specification, the only valid combination of ",Object(i.a)("inlineCode",{parentName:"p"},"(majorVersion, minorVersion)")," is ",Object(i.a)("inlineCode",{parentName:"p"},"(1, 0)"),". Defaults to ",Object(i.a)("inlineCode",{parentName:"p"},"(1, 0)"),"."))),Object(i.a)("h3",null,"Class ",Object(i.a)(d.a,{s:o.c.MetricHead.Vhea,mdxType:"Decl"})),Object(i.a)("h4",null,"Inherits"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.g,{s:o.c.MetricHead.Table,mdxType:"R"}))),Object(i.a)("h4",null,"Cosntructor"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)(d.e,{ctor:!0,s:o.c.MetricHead.Vhea.constructor,args:{majorVersion:Object(u.g)(o.l),minorVersion:Object(u.g)(o.l)},mdxType:"Method"}),Object(i.a)("p",{parentName:"li"},"  In current OpenType specification, the valid combinations of ",Object(i.a)("inlineCode",{parentName:"p"},"(majorVersion, minorVersion)")," are ",Object(i.a)("inlineCode",{parentName:"p"},"(1, 0)")," and ",Object(i.a)("inlineCode",{parentName:"p"},"(1, 0x1000)"),". Defaults to ",Object(i.a)("inlineCode",{parentName:"p"},"(1, 0)"),"."))))}s.isMDXComponent=!0},vZxs:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/references/ot/metric-head",function(){return a("smnV")}])}},[["vZxs",0,2,1,3]]]);