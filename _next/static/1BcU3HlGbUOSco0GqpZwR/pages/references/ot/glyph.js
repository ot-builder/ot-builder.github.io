(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"2zsx":function(e,t,a){"use strict";a.d(t,"g",(function(){return l})),a.d(t,"i",(function(){return c})),a.d(t,"d",(function(){return n})),a.d(t,"k",(function(){return p})),a.d(t,"b",(function(){return r})),a.d(t,"h",(function(){return y})),a.d(t,"j",(function(){return b})),a.d(t,"a",(function(){return i})),a.d(t,"e",(function(){return o})),a.d(t,"c",(function(){return m})),a.d(t,"f",(function(){return s}));var l=function(e){return{optional:e}},c=function(e){return{readonly:e}},n=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return{either:t}},p=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return{tuple:t}},r=function(e){for(var t=arguments.length,a=new Array(t>1?t-1:0),l=1;l<t;l++)a[l-1]=arguments[l];return{generic:e,args:a}},y=function(e,t){return{takes:e,returns:t}},b=function(e){return{object:e}},i=function(e,t){return{rawType:e,annotation:t}},o=function(e,t){return{operator:"extends",left:e,right:t}},m=function(e,t){return{operator:"=",left:e,right:t}},s=function(e,t){return{operator:"is",left:e,right:t}}},NiWh:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return O}));var l=a("z3IF"),c=a("2Fjn"),n=a("mXGw"),p=a.n(n),r=a("/FXl"),y=a("I+gl"),b=a("Vp4n"),i=a("+3er"),o=a("2zsx"),m=(p.a.createElement,{}),s=y.a;function O(e){var t=e.components,a=Object(c.a)(e,["components"]);return Object(r.a)(s,Object(l.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(r.a)("h1",null,Object(r.a)(b.a,{s:i.c.Glyph,mdxType:"Decl"})),Object(r.a)("p",null,"The type-namespace duplex ",Object(r.a)(b.g,{s:i.c.Glyph,mdxType:"R"})," defines the datatype, related datatype and operations for OpenType glyphs."),Object(r.a)("h2",null,"Glyph Store"),Object(r.a)("p",null,"A ",Object(r.a)(b.g,{s:i.c.Font,mdxType:"R"})," support any datatypt implemented ",Object(r.a)(b.g,{s:i.a.OrderStore(i.c.Glyph),mdxType:"R"})," to be the glyph store. ",Object(r.a)("inlineCode",{parentName:"p"},"ot-builder")," provided ",Object(r.a)(b.g,{s:i.c.ListGlyphStore,mdxType:"R"})," as the default glyph store implementation."),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.ListGlyphStore,mdxType:"Decl"})),Object(r.a)("p",null,"An opaque class that implements ",Object(r.a)(b.g,{s:i.a.OrderStore(i.c.Glyph),mdxType:"R"}),". Created by ",Object(r.a)(b.g,{s:i.c.ListGlyphStoreFactory,mdxType:"R"}),"."),Object(r.a)("h3",null,"Singleton ",Object(r.a)(b.a,{s:i.c.ListGlyphStoreFactory,mdxType:"Decl"})),Object(r.a)("p",null,"An opaque factory object that implements ",Object(r.a)(b.g,{s:i.a.OrderStoreFactoryWithDefault(i.c.Glyph,i.c.ListGlyphStore),mdxType:"R"}),"."),Object(r.a)("h2",null,"Glyph"),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.Glyph,mdxType:"Decl"})),Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.b,{s:i.c.Glyph.create,mdxType:"Fn"}),Object(r.a)("p",{parentName:"li"}," Create a blank ",Object(r.a)(b.g,{s:i.c.Glyph,mdxType:"R"})," with default implementation."))),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.name,type:i.a.Maybe(i.n),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The glyph name. Optional.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.geometry,type:i.a.Maybe(i.c.Glyph.Geometry),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The geometry. Optional. When absent, the glyph is considered a space.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.hints,type:i.a.Maybe(i.c.Glyph.Hints),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The hints. Optional.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.horizontal,type:i.a.Maybe(i.c.Glyph.Metric),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The horizontal metric.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.vertical,type:i.a.Maybe(i.c.Glyph.Metric),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The vertical metric."))),Object(r.a)("h4",null,"Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{s:i.c.Glyph.apply("E","EG","EH"),args:{alg:i.c.Glyph.GlyphAlg("E","EG","EH")},returns:"E",mdxType:"Method"}),Object(r.a)("p",{parentName:"li"}," Accepts a ",Object(r.a)(b.g,{s:i.c.Glyph.GlyphAlg,mdxType:"R"})," and return the results."))),Object(r.a)("h2",null,"Metrics"),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.Glyph.Metric,mdxType:"Decl"})),Object(r.a)("p",null,"Defines a metric advance of a glyph."),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Metric.start,type:i.c.Var.Value,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," Start coordiante.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Metric.end,type:i.c.Var.Value,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," End coordinate."))),Object(r.a)("h2",null,"Geometry"),Object(r.a)("h3",null,"Interface ",Object(r.a)(b.a,{s:i.c.Glyph.Geometry,mdxType:"Decl"})),Object(r.a)("p",null,"Defined as ",Object(r.a)(b.g,{s:i.c.Glyph.GeometryT(Object(o.j)({ref:i.c.Glyph.Geometry})),mdxType:"R"})),Object(r.a)("h3",null,"Interface ",Object(r.a)(b.a,{s:i.c.Glyph.GeometryT("E"),mdxType:"Decl"})),Object(r.a)("p",null,"Defines as the union of the following cases."),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.ContourSet,mdxType:"R"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.TtReference,mdxType:"R"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.GeometryListT("E"),mdxType:"R"}))),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.GeometryT.type,type:"unique symbol",mdxType:"Member"}),Object(r.a)("p",{parentName:"li"},"The type tag of this hint object."))),Object(r.a)("h3",null,"Case Type ",Object(r.a)(b.a,{s:i.c.Glyph.ContourSet,mdxType:"Decl"})," | type = ",Object(r.a)(b.g,{s:i.c.Glyph.GeometryType.ContourSet,mdxType:"R"})),Object(r.a)("h4",null,"Inherits"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.ContourSetProps,mdxType:"R"}))),Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.b,{s:i.c.Glyph.ContourSet.create,args:{},returns:i.c.Glyph.ContourSet,mdxType:"Fn"}),Object(r.a)("p",{parentName:"li"}," Creates an ",Object(r.a)(b.g,{s:i.c.Glyph.ContourSet,mdxType:"R"})," with default implementation."))),Object(r.a)("h3",null,"Interface ",Object(r.a)(b.a,{s:i.c.Glyph.ContourSetProps,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.ContourSetProps.contours,type:Object(i.h)(i.c.Glyph.Contour),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The contour set, being a nested array of control knots."))),Object(r.a)("h3",null,"Case Type ",Object(r.a)(b.a,{s:i.c.Glyph.TtReference,mdxType:"Decl"})," | type = ",Object(r.a)(b.g,{s:i.c.Glyph.GeometryType.TtReference,mdxType:"R"})),Object(r.a)("h4",null,"Inherits"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.TtReferenceProps,mdxType:"R"}))),Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.b,{long:!0,s:i.c.Glyph.TtReference.create,args:{to:Object(o.a)(i.c.Glyph,"Target glyph"),transform:Object(o.a)(i.c.Glyph.Transform2X3,"Transform of this reference")},returns:i.c.Glyph.TtReference,mdxType:"Fn"}),Object(r.a)("p",{parentName:"li"},"  Creates an ",Object(r.a)(b.g,{s:i.c.Glyph.TrReference,mdxType:"R"})," with default implementation."))),Object(r.a)("h3",null,"Interface ",Object(r.a)(b.a,{s:i.c.Glyph.TtReferenceProps,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.TtReferenceProps.to,type:i.c.Glyph,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The target glyph.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.TtReferenceProps.transform,type:i.c.Glyph.Transform2X3,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The transform being applied.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.TtReferenceProps.roundXyToGrid,type:i.i,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," Whether to round to grid.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.TtReferenceProps.useMyMetrics,type:i.i,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," If set, this forces the advance width and left sidebearing for the composite to be equal to those from this original glyph. This works for hinted and unhinted characters.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.TtReferenceProps.overlapCompound,type:i.i,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," If set, the components of the glyph containing this reference overlap.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.TtReferenceProps.pointAttachment,type:i.a.Maybe(i.c.Glyph.PointAttachment),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," When present, this reference follows TrueType's point-attachment rules."))),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.Glyph.GeometryList,mdxType:"Decl"})),Object(r.a)("p",null,"Defined as ",Object(r.a)(b.g,{s:i.c.Glyph.GeometryListT(Object(o.j)({ref:i.c.Glyph.Geometry})),mdxType:"R"})),Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.b,{s:i.c.Glyph.GeometryList.create,args:{items:Object(o.g)(Object(i.h)(i.c.Glyph.Geometry))},returns:i.c.Glyph.GeometryList,mdxType:"Fn"}),Object(r.a)("p",{parentName:"li"}," Creates an ",Object(r.a)(b.g,{s:i.c.Glyph.GeometryList,mdxType:"R"})," from its members."))),Object(r.a)("h3",null,"Case Type ",Object(r.a)(b.a,{s:i.c.Glyph.GeometryListT("E"),mdxType:"Decl"})," | type = ",Object(r.a)(b.g,{s:i.c.Glyph.GeometryType.GeometryList,mdxType:"R"})),Object(r.a)("h4",null,"Inherits"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.GeometryListProps("E"),mdxType:"R"}))),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.Glyph.GeometryListProps("E"),mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.GeometryList.items,type:Object(i.h)("E"),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The sub items inside."))),Object(r.a)("h2",null,"Hints"),Object(r.a)("h3",null,"Interface ",Object(r.a)(b.a,{s:i.c.Glyph.Hint,mdxType:"Decl"})),Object(r.a)("p",null,"Defines as the union of the following cases."),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.TtInstruction,mdxType:"R"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.CffHint,mdxType:"R"}))),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Hint.type,type:"unique symbol",mdxType:"Member"}),Object(r.a)("p",{parentName:"li"},"The type tag of this hint object."))),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.Glyph.TtInstruction,mdxType:"Decl"})," | type = ",Object(r.a)(b.g,{s:i.c.Glyph.HintType.TtInstruction,mdxType:"R"})),Object(r.a)("h4",null,"Inherits"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.TtInstructionProps,mdxType:"R"}))),Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.b,{s:i.c.Glyph.TtInstruction.create,args:{instructions:"Buffer"},mdxType:"Fn"}),Object(r.a)("p",{parentName:"li"}," Creates an ",Object(r.a)(b.g,{s:i.c.Glyph.TtInstruction,mdxType:"R"})," from a given instruction buffer."))),Object(r.a)("h3",null,"Interface ",Object(r.a)(b.a,{s:i.c.Glyph.TtInstructionProps,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.TtInstructionProps.instructions,type:"Buffer",mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The buffer containing the TrueType instructions."))),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.Glyph.CffHint,mdxType:"Decl"})," | type = ",Object(r.a)(b.g,{s:i.c.Glyph.HintType.CffHint,mdxType:"R"})),Object(r.a)("h4",null,"Inherits"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.g,{s:i.c.Glyph.CffHintProps,mdxType:"R"}))),Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.b,{s:i.c.Glyph.CffHint.create,args:{},returns:i.c.Glyph.CffHint,mdxType:"Fn"}),Object(r.a)("p",{parentName:"li"}," Create an empty ",Object(r.a)(b.g,{s:i.c.Glyph.CffHint,mdxType:"R"}),"."))),Object(r.a)("h3",null,"Interface ",Object(r.a)(b.a,{s:i.c.Glyph.CffHintProps,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintProps.hStems,type:i.c.Glyph.CffHintStem,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The horizontal stems.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintProps.vStems,type:i.c.Glyph.CffHintStem,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The vertical stems.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintProps.hintMasks,type:i.c.Glyph.CffHintMask,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The hint masks.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintProps.counterMasks,type:i.c.Glyph.CffHintMask,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The contour masks."))),Object(r.a)("h3",null,"Datatype ",Object(r.a)(b.a,{s:i.c.Glyph.CffHintStem,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintStem.start,type:i.c.Var,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," Start coordinate of this hint stem.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintStem.end,type:i.c.Var,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," End coordinate of this hint stem."))),Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.b,{s:i.c.Glyph.CffHint.createStem,args:{start:i.c.Var.Value,end:i.c.Var.Value},returns:i.c.Glyph.CffHintStem,mdxType:"Fn"}),Object(r.a)("p",{parentName:"li"}," Create a ",Object(r.a)(b.g,{s:i.c.Glyph.CffHintStem,mdxType:"R"}),"."))),Object(r.a)("h3",null,"Datatype ",Object(r.a)(b.a,{s:i.c.Glyph.CffHintMask,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintMask.at,type:Object(i.m)(i.c.Glyph.PointRef),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The point reference right before this hint mask take effect.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintMask.maskH,type:Object(i.m)(i.c.Glyph.CffHintStem),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," Horizontal stems needed to be enabled.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{s:i.c.Glyph.CffHintMask.maskH,type:Object(i.m)(i.c.Glyph.CffHintStem),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," Vertical stems needed to be enabled."))),Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.b,{long:!0,s:i.c.Glyph.CffHint.createMask,args:{at:Object(o.a)(i.c.Glyph.PointRef,"Point reference right before this mask"),maskH:Object(o.a)(Object(i.m)(i.c.Glyph.CffHintStem),"Horizontal stems to be enabled"),maskV:Object(o.a)(Object(i.m)(i.c.Glyph.CffHintStem),"Vertical stems to be enabled")},returns:i.c.Glyph.CffHintMask,mdxType:"Fn"}),Object(r.a)("p",{parentName:"li"}," Create a ",Object(r.a)(b.g,{s:i.c.Glyph.CffHintMask,mdxType:"R"}),"."))),Object(r.a)("h2",null,"Support Types"),Object(r.a)("h3",null,"Datatype ",Object(r.a)(b.a,{s:i.c.Glyph.Contour,mdxType:"Decl"})),Object(r.a)("p",null,"Defined as ",Object(r.a)(b.g,{s:Object(i.h)(i.c.Glyph.Point),mdxType:"R"}),"."),Object(r.a)("h3",null,"Datatype ",Object(r.a)(b.a,{s:i.c.Glyph.Point,mdxType:"Decl"})),Object(r.a)(b.g,{s:i.c.Glyph.Point,mdxType:"R"})," defines the datatype of glyph points.",Object(r.a)("h4",null,"Factory Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{long:!0,static:!0,s:i.c.Glyph.Point.create,args:{x:Object(o.a)(i.c.Var.Value,"X Coordinate"),y:Object(o.a)(i.c.Var.Value,"Y coordinate"),kind:Object(o.g)(Object(o.a)(i.c.Glyph.PointType,"Point Type"))},returns:i.c.Glyph.Point,mdxType:"Method"}))),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Point.x,type:i.c.Var.Value,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," X coordinate.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Point.y,type:i.c.Var.Value,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," Y coordinate.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Point.kind,type:i.c.Glyph.PointType,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," Point type."))),Object(r.a)("h3",null,"Singleton ",Object(r.a)(b.a,{s:i.c.Glyph.PointOps,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.PointOps.neutral,type:i.l,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," The identity of ",Object(r.a)(b.g,{s:i.c.Glyph.Point,mdxType:"R"}),". Equal to 0."))),Object(r.a)("h4",null,"Methods"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{s:i.c.Glyph.PointOps.add,args:{x:i.c.Glyph.Point,y:i.c.Glyph.Point},returns:i.c.Glyph.Point,mdxType:"Method"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{s:i.c.Glyph.PointOps.negate,args:{x:i.c.Glyph.Point},returns:i.c.Glyph.Point,mdxType:"Method"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{s:i.c.Glyph.PointOps.minus,args:{x:i.c.Glyph.Point,y:i.c.Glyph.Point},returns:i.c.Glyph.Point,mdxType:"Method"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{s:i.c.Glyph.PointOps.scale,args:{scale:i.l,y:i.c.Glyph.Point},returns:i.c.Glyph.Point,mdxType:"Method"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{s:i.c.Glyph.PointOps.addScale,args:{x:i.c.Glyph.Point,scale:i.l,y:i.c.Glyph.Point},returns:i.c.Glyph.Point,mdxType:"Method"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{s:i.c.Glyph.PointOps.applyTransform,args:{x:i.c.Glyph.Point,transform:i.c.Glyph.Transform2X3},returns:i.c.Glyph.Point,mdxType:"Method"}))),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.Glyph.Transform2X3,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Transform2X3.dx,type:i.c.Var.Value,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Transform2X3.dy,type:i.c.Var.Value,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Transform2X3.xx,type:i.l,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Transform2X3.xy,type:i.l,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Transform2X3.yx,type:i.l,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Transform2X3.yy,type:i.l,mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," 2\xd73 transformation entries.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.Transform2X3.scaledOffset,type:i.a.Maybe(i.i),mdxType:"Member"}),Object(r.a)("p",{parentName:"li"}," Whether the offset is scaled."))),Object(r.a)("h3",null,"Enumeration ",Object(r.a)(b.a,{s:i.c.Glyph.PointType,mdxType:"Decl"})),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.c,{s:i.c.Glyph.PointType.Corner,mdxType:"Item"})," = 0",Object(r.a)("p",{parentName:"li"}," This point is corner point.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.c,{s:i.c.Glyph.PointType.Lead,mdxType:"Item"})," = 1",Object(r.a)("p",{parentName:"li"}," This point is the first control point of a cubic Beizer curve.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.c,{s:i.c.Glyph.PointType.Follow,mdxType:"Item"})," = 2",Object(r.a)("p",{parentName:"li"}," This point is the second control point of a cubic Beizer curve.")),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.c,{s:i.c.Glyph.PointType.Quad,mdxType:"Item"})," = 3",Object(r.a)("p",{parentName:"li"}," This point is an off-curve control point in a quadratic contour, as in TrueType."))),Object(r.a)("h3",null,"Datatype ",Object(r.a)(b.a,{s:i.c.Glyph.PointRef,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.PointRef.geometry,type:i.l,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.PointRef.contour,type:i.l,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.PointRef.index,type:i.l,mdxType:"Member"}))),Object(r.a)("h3",null,"Datatype ",Object(r.a)(b.a,{s:i.c.Glyph.PointIDRef,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.PointIDRef.pointIndex,type:i.l,mdxType:"Member"}))),Object(r.a)("h3",null,"Datatype ",Object(r.a)(b.a,{s:i.c.Glyph.GlyphPointIDRef,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.GlyphPointIDRef.glyph,type:i.c.Glyph,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.GlyphPointIDRef.pointIndex,type:i.l,mdxType:"Member"}))),Object(r.a)("h3",null,"Datatype ",Object(r.a)(b.a,{s:i.c.Glyph.PointAttachment,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.PointAttachment.inner,type:i.c.Glyph.PointIDRef,mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.Glyph.PointAttachment.outer,type:i.c.Glyph.PointIDRef,mdxType:"Member"}))),Object(r.a)("h2",null,"Glyph Naming"),Object(r.a)("h3",null,"Type ",Object(r.a)(b.a,{s:i.c.GlyphNamingSource,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.GlyphNamingSource.post,type:i.a.Maybe(i.a.Naming.Source(i.c.Glyph)),mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.GlyphNamingSource.cff,type:i.a.Maybe(i.a.Naming.Source(i.c.Glyph)),mdxType:"Member"})),Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.d,{readonly:!0,s:i.c.GlyphNamingSource.encoding,type:i.a.Maybe(i.a.Naming.IndexSource(i.c.Glyph)),mdxType:"Member"}))),Object(r.a)("h3",null,"Interface ",Object(r.a)(b.a,{s:i.c.GlyphNamer,mdxType:"Decl"})),Object(r.a)("h4",null,"Properties"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)(b.e,{s:i.c.GlyphNamer.nameGlyph,args:{source:i.c.GlyphNamingSource,gid:i.l,glyph:i.c.Glyph},returns:i.n,mdxType:"Method"}))),Object(r.a)("h3",null,"Singleton ",Object(r.a)(b.a,{s:i.c.StandardOtGlyphNamer,mdxType:"Decl"})),Object(r.a)("p",null,"The default glyph namer, implements ",Object(r.a)(b.g,{s:i.c.GlyphNamer,mdxType:"R"}),"."))}O.isMDXComponent=!0},n1IY:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/references/ot/glyph",function(){return a("NiWh")}])}},[["n1IY",0,2,1,3]]]);