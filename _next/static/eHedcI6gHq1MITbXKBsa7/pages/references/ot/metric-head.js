(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{q3Ca:function(e,a,t){"use strict";t.d(a,"g",(function(){return r})),t.d(a,"i",(function(){return n})),t.d(a,"d",(function(){return c})),t.d(a,"k",(function(){return l})),t.d(a,"b",(function(){return d})),t.d(a,"h",(function(){return i})),t.d(a,"j",(function(){return b})),t.d(a,"a",(function(){return m})),t.d(a,"e",(function(){return o})),t.d(a,"c",(function(){return u})),t.d(a,"f",(function(){return p}));var r=function(e){return{optional:e}},n=function(e){return{readonly:e}},c=function(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return{either:a}},l=function(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return{tuple:a}},d=function(e){for(var a=arguments.length,t=new Array(a>1?a-1:0),r=1;r<a;r++)t[r-1]=arguments[r];return{generic:e,args:t}},i=function(e,a){return{takes:e,returns:a}},b=function(e){return{object:e}},m=function(e,a){return{rawType:e,annotation:a}},o=function(e,a){return{operator:"extends",left:e,right:a}},u=function(e,a){return{operator:"=",left:e,right:a}},p=function(e,a){return{operator:"is",left:e,right:a}}},smnV:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return s}));var r=t("z3IF"),n=t("2Fjn"),c=t("mXGw"),l=t.n(c),d=t("/FXl"),i=t("/DYT"),b=t("uCIM"),m=t("hzWR"),o=t("q3Ca"),u=(l.a.createElement,{}),p=i.a;function s(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(d.a)(p,Object(r.a)({},u,t,{components:a,mdxType:"MDXLayout"}),Object(d.a)("h1",null,"Namespace ",Object(d.a)(b.a,{s:m.d.MetricHead,mdxType:"Decl"})),Object(d.a)("h3",null,"Constant ",Object(d.a)(b.a,{s:m.d.MetricHead.TagHhea,mdxType:"Decl"}),' = "hhea"'),Object(d.a)("h3",null,"Constant ",Object(d.a)(b.a,{s:m.d.MetricHead.TagVhea,mdxType:"Decl"}),' = "vhea"'),Object(d.a)("h3",null,"Abstract Class ",Object(d.a)(b.a,{s:m.d.MetricHead.Table,mdxType:"Decl"})),Object(d.a)("h4",null,"Properties"),Object(d.a)("ul",null,Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{readonly:!0,s:m.d.MetricHead.Table.isVertical,type:m.j,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{readonly:!0,s:m.d.MetricHead.Table.majorVersion,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{readonly:!0,s:m.d.MetricHead.Table.minorVersion,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table.ascender,type:m.d.Var.Value,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table.descender,type:m.d.Var.Value,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table.lineGap,type:m.d.Var.Value,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table.advanceMax,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{volatile:!0,s:m.d.MetricHead.Table.minStartSideBearing,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{volatile:!0,s:m.d.MetricHead.Table.minEndSideBearing,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{volatile:!0,s:m.d.MetricHead.Table.maxExtent,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table.caretSlopeRise,type:m.d.Var.Value,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table.caretSlopeRun,type:m.d.Var.Value,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table.caretOffset,type:m.d.Var.Value,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table._reserved0,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table._reserved1,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table._reserved2,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{s:m.d.MetricHead.Table._reserved3,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{readonly:!0,s:m.d.MetricHead.Table.metricDataFormat,type:m.m,mdxType:"Member"})),Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.d,{volatile:!0,s:m.d.MetricHead.Table.numberOfLongMetrics,type:m.m,mdxType:"Member"}))),Object(d.a)("h3",null,"Class ",Object(d.a)(b.a,{s:m.d.MetricHead.Hhea,mdxType:"Decl"})),Object(d.a)("h4",null,"Inherits"),Object(d.a)("ul",null,Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.g,{s:m.d.MetricHead.Table,mdxType:"R"}))),Object(d.a)("h4",null,"Cosntructor"),Object(d.a)("ul",null,Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.e,{ctor:!0,s:m.d.MetricHead.Hhea.constructor,args:{majorVersion:Object(o.g)(m.m),minorVersion:Object(o.g)(m.m)},mdxType:"Method"}),Object(d.a)("p",{parentName:"li"},"  In current OpenType specification, the only valid combination of ",Object(d.a)("inlineCode",{parentName:"p"},"(majorVersion, minorVersion)")," is ",Object(d.a)("inlineCode",{parentName:"p"},"(1, 0)"),". Defaults to ",Object(d.a)("inlineCode",{parentName:"p"},"(1, 0)"),"."))),Object(d.a)("h3",null,"Class ",Object(d.a)(b.a,{s:m.d.MetricHead.Vhea,mdxType:"Decl"})),Object(d.a)("h4",null,"Inherits"),Object(d.a)("ul",null,Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.g,{s:m.d.MetricHead.Table,mdxType:"R"}))),Object(d.a)("h4",null,"Cosntructor"),Object(d.a)("ul",null,Object(d.a)("li",{parentName:"ul"},Object(d.a)(b.e,{ctor:!0,s:m.d.MetricHead.Vhea.constructor,args:{majorVersion:Object(o.g)(m.m),minorVersion:Object(o.g)(m.m)},mdxType:"Method"}),Object(d.a)("p",{parentName:"li"},"  In current OpenType specification, the valid combinations of ",Object(d.a)("inlineCode",{parentName:"p"},"(majorVersion, minorVersion)")," are ",Object(d.a)("inlineCode",{parentName:"p"},"(1, 0)")," and ",Object(d.a)("inlineCode",{parentName:"p"},"(1, 0x1000)"),". Defaults to ",Object(d.a)("inlineCode",{parentName:"p"},"(1, 0)"),"."))))}s.isMDXComponent=!0},vZxs:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/references/ot/metric-head",function(){return t("smnV")}])}},[["vZxs",1,2,0,3]]]);